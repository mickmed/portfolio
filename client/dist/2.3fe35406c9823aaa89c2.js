(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{101:function(e,n,t){"use strict";t.r(n),t.d(n,"Resume",(function(){return o}));t(82);var i=t(0),c=t(3);t(95),t(8),t(85);async function o(){console.log("pdf");let e=Object(i.e)(".main-content-scrollable");for(;e.childNodes.length;)e.removeChild(e.lastChild);Object(i.c)("img","img").src="src/img/mam_logo.png",e.innerHTML="\n  <embed class='resume-pdf' src='https://docs.google.com/document/d/1F0CtmV9ViPecK5KDHgKS2BZJiSy8QL6LS51BF2IaroI/edit' type='application/pdf'/>\n\n\n\n",e.appendChild(Object(c.a)())}},82:function(e,n,t){"use strict";t.d(n,"a",(function(){return c}));var i=t(0);t(83);const c=(e,n,t,c)=>{let o=Object(i.c)("div","project-img"),d=Object(i.c)("div","img-wrapper");o.appendChild(d);let l=Object(i.c)("div","inner-img-wrap");if(d.appendChild(l),l.appendChild(Object(i.c)("img","img")).src=e,!0===t){let e=l.appendChild(Object(i.c)("div","modal"));e.classList.add("project-modal","modal-slide");e.appendChild(Object(i.c)("span","modal-span")),e.childNodes[0].appendChild(Object(i.c)("h2","project-title"));e.childNodes[0].childNodes[0].innerText=n}return o}},83:function(e,n,t){var i=t(1),c=t(84);"string"==typeof(c=c.__esModule?c.default:c)&&(c=[[e.i,c,""]]);var o={insert:"head",singleton:!1},d=(i(c,o),c.locals?c.locals:{});e.exports=d},84:function(e,n,t){},85:function(e,n,t){var i=t(1),c=t(86);"string"==typeof(c=c.__esModule?c.default:c)&&(c=[[e.i,c,""]]);var o={insert:"head",singleton:!1},d=(i(c,o),c.locals?c.locals:{});e.exports=d},86:function(e,n,t){},95:function(e,n,t){var i=t(1),c=t(96);"string"==typeof(c=c.__esModule?c.default:c)&&(c=[[e.i,c,""]]);var o={insert:"head",singleton:!1},d=(i(c,o),c.locals?c.locals:{});e.exports=d},96:function(e,n,t){}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,