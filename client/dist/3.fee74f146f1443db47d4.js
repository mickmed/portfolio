(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{101:function(e,t,n){"use strict";n.d(t,"c",(function(){return c})),n.d(t,"a",(function(){return i})),n.d(t,"d",(function(){return l})),n.d(t,"b",(function(){return s}));var o=n(98);const a=Object(o.a)();let c=async()=>await fetch(`${a}/technologies`).then(e=>e.json()).then(e=>e),i=async e=>await fetch(`${a}/technologies`,{method:"post",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>e);const l=async(e,t)=>{await fetch(`${a}/technologies/${t}`,{method:"put",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>e)},s=async e=>{await fetch(`${a}/technologies/${e}`,{method:"delete",headers:{"Content-Type":"application/json"}}).then(e=>e).then(e=>e)}},117:function(e,t,n){var o=n(1),a=n(118);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var c={insert:"head",singleton:!1},i=(o(a,c),a.locals?a.locals:{});e.exports=i},118:function(e,t,n){},127:function(e,t,n){"use strict";n.r(t),n.d(t,"Technologies",(function(){return l}));var o=n(0),a=n(99),c=n(101),i=n(3);n(117);async function l(){const e=Object(o.e)(".scrollable-content");for(;e.childNodes.length;)e.removeChild(e.lastChild);const t=await Object(a.d)(),n=e.appendChild(Object(o.c)("div","technologies")),l=await Object(c.c)();let s="",r="";const d=e=>{console.log(e.target.name,e.target.value),s=e.target.value};l.forEach((e,a)=>{let l=Object(o.c)("img","tech-icon");if(l.src=`src/img/${e.icon_url}`,n.appendChild(l),t&&t.isAdmin){let t=Object(o.c)("div","name");t.innerText=e.name;const a=Object(i.c)("tech-icon-form"),l=Object(i.d)({className:"techIconInput",name:e.name,type:"text",value:e.icon_url,placeholder:"tech-icon-url",handleChange:d});a.appendChild(l),a.appendChild(t),n.appendChild(a);const r=Object(i.a)("update-tech-icon-btn","submit","update icon url");a.addEventListener("submit",t=>{console.log(e.id),((e,t,n)=>{e.preventDefault(),Object(c.d)(t,n)})(t,{...e,icon_url:s},e.id)}),a.appendChild(r);const h=Object(i.a)("delete-tech-btn","submit");h.innerText="delete",h.addEventListener("click",()=>{console.log("test"),Object(c.b)(e.id)}),a.appendChild(h)}});const h=Object(i.c)("add-tech-icon-form"),u=Object(i.d)({className:"name",name:"nameInput",type:"text",value:"",placeholder:"new technology",handleChange:d}),p=Object(i.d)({className:"techIconInput",name:"input",type:"text",value:s,placeholder:"tech-icon-url",handleChange:e=>{console.log(e.target.name,e.target.value),r=e.target.value}});n.appendChild(h);const g=Object(i.a)("new-tech-icon-btn","submit","new icon url");return h.addEventListener("submit",async e=>{console.log(s);await((e,t)=>{e.preventDefault(),Object(c.a)(t)})(e,{name:r,icon_url:s})}),h.appendChild(g),h.appendChild(p),h.appendChild(u),e}},98:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));const o=()=>"https://portfolio-mick-server.herokuapp.com"},99:function(e,t,n){"use strict";n.d(t,"c",(function(){return c})),n.d(t,"a",(function(){return i})),n.d(t,"d",(function(){return l})),n.d(t,"b",(function(){return s}));var o=n(98);const a=Object(o.a)();const c=async e=>(console.log(JSON.stringify(e)),await fetch(a+"/users",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>e.json()).then(e=>(localStorage.setItem("authToken",e.token),e))),i=async e=>{console.log(e);let t=await fetch(a+"/auth/login",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>e.json()).then(e=>(localStorage.setItem("authToken",e.token),e));return console.log(t),t},l=async()=>{if(localStorage.getItem("authToken")){return await fetch(a+"/auth/verify",{method:"get",headers:(e={"Content-Type":"application/json"},localStorage.authToken?{...e,Authorization:`Bearer ${localStorage.authToken}`}:e)}).then(e=>e.json()).then(e=>e)}var e;return!1},s=async()=>(localStorage.removeItem("authToken"),{"Content-Type":"application/json"},"logged out")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvQ29tcG9uZW50cy9TZXJ2aWNlcy9BcGlUZWNoLmpzIiwid2VicGFjazovLy8uL3NyYy9Db21wb25lbnRzL1RlY2hub2xvZ2llcy9UZWNobm9sb2dpZXMuc2Nzcz9jOTVhIiwid2VicGFjazovLy8uL3NyYy9Db21wb25lbnRzL1RlY2hub2xvZ2llcy9UZWNobm9sb2dpZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0NvbXBvbmVudHMvU2VydmljZXMvQmFzZVVybC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQ29tcG9uZW50cy9TZXJ2aWNlcy9BcGlBdXRoLmpzIl0sIm5hbWVzIjpbImJhc2VVcmwiLCJnZXRUZWNobm9sb2dpZXMiLCJhc3luYyIsImZldGNoIiwidGhlbiIsInJlcyIsImpzb24iLCJhbnMiLCJjcmVhdGVUZWNobm9sb2d5IiwiYm9keSIsIm1ldGhvZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJoZWFkZXJzIiwidXBkYXRlVGVjaG5vbG9neSIsImlkIiwiZGF0YSIsImRlbGV0ZVRlY2hub2xvZ3kiLCJhcGkiLCJjb250ZW50IiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJtb2R1bGUiLCJpIiwib3B0aW9ucyIsImV4cG9ydGVkIiwibG9jYWxzIiwiZXhwb3J0cyIsIlRlY2hub2xvZ2llcyIsIm1haW5Db250ZW50U2Nyb2xsYWJsZSIsImNoaWxkTm9kZXMiLCJsZW5ndGgiLCJyZW1vdmVDaGlsZCIsImxhc3RDaGlsZCIsInVzZXIiLCJ0ZWNobm9sb2dpZXMiLCJhcHBlbmRDaGlsZCIsInRlY2hJY29ucyIsIm5ld0ljb25VcmwiLCJuYW1lIiwiaGFuZGxlQ2hhbmdlIiwiZSIsImNvbnNvbGUiLCJsb2ciLCJ0YXJnZXQiLCJ2YWx1ZSIsImZvckVhY2giLCJ0ZWNoIiwiaW5kZXgiLCJpY29uIiwic3JjIiwiaWNvbl91cmwiLCJpc0FkbWluIiwiaW5uZXJUZXh0IiwiZm9ybSIsImlucHV0IiwiY2xhc3NOYW1lIiwidHlwZSIsInBsYWNlaG9sZGVyIiwiYnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsInByZXZlbnREZWZhdWx0IiwidXBkYXRlIiwiZGVsZXRlQnRuIiwibmFtZUlucHV0IiwiY3JlYXRlIiwiQmFzZVVybCIsInNpZ25VcCIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJ0b2tlbiIsImxvZ2luIiwidmVyaWZ5IiwiZ2V0SXRlbSIsImF1dGhUb2tlbiIsIkF1dGhvcml6YXRpb24iLCJsb2dvdXQiLCJyZW1vdmVJdGVtIl0sIm1hcHBpbmdzIjoiMEZBQUEsb0pBQ0EsTUFBTUEsRUFBVSxjQUtULElBQUlDLEVBQWtCQyxlQUNQQyxNQUFNLEdBQUdILGtCQUMxQkksS0FBTUMsR0FFRUEsRUFBSUMsUUFFWkYsS0FBTUcsR0FDRUEsR0FPRkMsRUFBbUJOLE1BQU9PLFNBQ2ZOLE1BQU0sR0FBR0gsaUJBQXdCLENBQ25EVSxPQUFRLE9BQ1JELEtBQUtFLEtBQUtDLFVBQVVILEdBQ3BCSSxRQUFTLENBQUUsZUFBZ0Isc0JBRTVCVCxLQUFNQyxHQUNFQSxFQUFJQyxRQUVaRixLQUFNRyxHQUNFQSxHQU1KLE1BQU1PLEVBQW1CWixNQUFPTyxFQUFNTSxXQUV6QlosTUFBTSxHQUFHSCxrQkFBd0JlLElBQU0sQ0FDdkRMLE9BQVEsTUFDUkQsS0FBTUUsS0FBS0MsVUFBVUgsR0FDckJJLFFBQVMsQ0FBRSxlQUFnQixzQkFFMUJULEtBQU1FLEdBQ0VBLEVBQUtBLFFBRWJGLEtBQU1ZLEdBQ0VBLElBS0FDLEVBQW1CZixNQUFNYSxVQUNqQlosTUFBTSxHQUFHSCxrQkFBd0JlLElBQUssQ0FDdkRMLE9BQVEsU0FDUkcsUUFBUyxDQUFDLGVBQWdCLHNCQUUzQlQsS0FBS0UsR0FDR0EsR0FFUkYsS0FBS1ksR0FDR0EsSyxvQkM3RFgsSUFBSUUsRUFBTSxFQUFRLEdBQ0ZDLEVBQVUsRUFBUSxLQUlDLGlCQUZ2QkEsRUFBVUEsRUFBUUMsV0FBYUQsRUFBUUUsUUFBVUYsS0FHL0NBLEVBQVUsQ0FBQyxDQUFDRyxFQUFPQyxFQUFJSixFQUFTLE1B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SCxFQUFVLFNBQVUsQ0FDeENVLE9BQVEsT0FDUkcsUUFBUyxDQUFFLGVBQWdCLG9CQUMzQkosS0FBTUUsS0FBS0MsVUFBVUgsS0FFcEJMLEtBQU1FLEdBQ0VBLEVBQUtBLFFBRWJGLEtBQU1ZLElBRUxvRCxhQUFhQyxRQUFRLFlBQWFyRCxFQUFLc0QsT0FFaEN0RCxLQUtBdUQsRUFBUXJFLE1BQU9PLElBQzFCaUMsUUFBUUMsSUFBSWxDLEdBQ1osSUFBSUosUUFBWUYsTUFBTUgsRUFBVSxjQUFlLENBQzdDVSxPQUFRLE9BQ1JHLFFBQVMsQ0FBRSxlQUFnQixvQkFDM0JKLEtBQU1FLEtBQUtDLFVBQVVILEtBRXBCTCxLQUFNRSxHQUNFQSxFQUFLQSxRQUdiRixLQUFNWSxJQUVMb0QsYUFBYUMsUUFBUSxZQUFhckQsRUFBS3NELE9BR2hDdEQsSUFHWCxPQURBMEIsUUFBUUMsSUFBSXRDLEdBQ0xBLEdBR0ltRSxFQUFTdEUsVUFHcEIsR0FGY2tFLGFBQWFLLFFBQVEsYUFFeEIsQ0FjVCxhQWJrQnRFLE1BQU1ILEVBQVUsZUFBZ0IsQ0FDaERVLE9BQVEsTUFDUkcsU0FsRXFCQSxFQWtFRCxDQUNsQixlQUFnQixvQkFsRWxCdUQsYUFBYU0sVUFDUixJQUNGN0QsRUFDSDhELGNBQWUsVUFBVVAsYUFBYU0sYUFHakM3RCxLQStESlQsS0FBTUUsR0FDRUEsRUFBS0EsUUFFYkYsS0FBTVksR0FDRUEsR0ExRVIsSUFBb0JILEVBZ0Z6QixPQUFPLEdBc0JJK0QsRUFBUzFFLFVBQ3BCa0UsYUFBYVMsV0FBVyxhQUNYLENBQ1gsZUFBZ0Isb0JBRVgiLCJmaWxlIjoiMy5mZWU3NGYxNDZmMTQ0M2RiNDdkNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VVcmwgfSBmcm9tICcuL0Jhc2VVcmwuanMnXG5jb25zdCBiYXNlVXJsID0gQmFzZVVybCgpXG5cblxuXG5cbmV4cG9ydCBsZXQgZ2V0VGVjaG5vbG9naWVzID0gYXN5bmMgKCkgPT4ge1xuICBsZXQgcmVzdWx0cyA9IGF3YWl0IGZldGNoKGAke2Jhc2VVcmx9L3RlY2hub2xvZ2llc2ApXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuXG4gICAgICByZXR1cm4gcmVzLmpzb24oKVxuICAgIH0pXG4gICAgLnRoZW4oKGFucykgPT4ge1xuICAgICAgcmV0dXJuIGFuc1xuICAgIH0pXG5cbiAgcmV0dXJuIHJlc3VsdHNcbn1cblxuXG5leHBvcnQgbGV0IGNyZWF0ZVRlY2hub2xvZ3kgPSBhc3luYyAoYm9keSkgPT4ge1xuICBsZXQgcmVzdWx0cyA9IGF3YWl0IGZldGNoKGAke2Jhc2VVcmx9L3RlY2hub2xvZ2llc2AsIHtcbiAgICBtZXRob2Q6IGBwb3N0YCxcbiAgICBib2R5OkpTT04uc3RyaW5naWZ5KGJvZHkpLFxuICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ30sXG4gIH0pXG4gIC50aGVuKChyZXMpPT57XG4gICAgcmV0dXJuIHJlcy5qc29uKClcbiAgfSlcbiAgLnRoZW4oKGFucyk9PntcbiAgICByZXR1cm4gYW5zXG4gIH0pXG4gIHJldHVybiByZXN1bHRzXG59XG5cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVRlY2hub2xvZ3kgPSBhc3luYyAoYm9keSwgaWQpID0+IHtcbiAgXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke2Jhc2VVcmx9L3RlY2hub2xvZ2llcy8ke2lkfWAsIHtcbiAgICBtZXRob2Q6IGBwdXRgLFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxuICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICB9KVxuICAgIC50aGVuKChqc29uKSA9PiB7XG4gICAgICByZXR1cm4ganNvbi5qc29uKClcbiAgICB9KVxuICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICByZXR1cm4gZGF0YVxuICAgIH0pXG5cbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVRlY2hub2xvZ3kgPSBhc3luYyhpZCkgPT4ge1xuICBjb25zdCByZXNwID0gYXdhaXQgZmV0Y2goYCR7YmFzZVVybH0vdGVjaG5vbG9naWVzLyR7aWR9YCx7XG4gICAgbWV0aG9kOiBgZGVsZXRlYCxcbiAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ31cbiAgfSlcbiAgLnRoZW4oanNvbj0+e1xuICAgIHJldHVybiBqc29uXG4gIH0pXG4gIC50aGVuKGRhdGE9PntcbiAgICByZXR1cm4gZGF0YVxuICB9KVxufVxuXG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9UZWNobm9sb2dpZXMuc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxudmFyIGV4cG9ydGVkID0gY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHt9O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDsiLCJpbXBvcnQgeyBjZWNsLCBxcyB9IGZyb20gJy4uL0hlbHBlcnMvZG9tSGVscGVyJ1xuaW1wb3J0IHsgdmVyaWZ5IH0gZnJvbSAnLi4vU2VydmljZXMvQXBpQXV0aCdcbmltcG9ydCB7IGdldFRlY2hub2xvZ2llcywgY3JlYXRlVGVjaG5vbG9neSwgdXBkYXRlVGVjaG5vbG9neSwgZGVsZXRlVGVjaG5vbG9neSB9IGZyb20gJy4uL1NlcnZpY2VzL0FwaVRlY2gnXG5pbXBvcnQgeyBGb3JtLCBJbnB1dCwgQnV0dG9uIH0gZnJvbSAnLi4vU2hhcmVkL0Zvcm0nXG5pbXBvcnQgJy4vVGVjaG5vbG9naWVzLnNjc3MnXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBUZWNobm9sb2dpZXMoKSB7XG5cbiAgY29uc3QgbWFpbkNvbnRlbnRTY3JvbGxhYmxlID0gcXMoXCIuc2Nyb2xsYWJsZS1jb250ZW50XCIpXG4gIHdoaWxlIChtYWluQ29udGVudFNjcm9sbGFibGUuY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICBtYWluQ29udGVudFNjcm9sbGFibGUucmVtb3ZlQ2hpbGQobWFpbkNvbnRlbnRTY3JvbGxhYmxlLmxhc3RDaGlsZClcbiAgfVxuXG4gIGNvbnN0IHVzZXIgPSBhd2FpdCB2ZXJpZnkoKVxuICBjb25zdCB0ZWNobm9sb2dpZXMgPSBtYWluQ29udGVudFNjcm9sbGFibGUuYXBwZW5kQ2hpbGQoY2VjbChcImRpdlwiLCBcInRlY2hub2xvZ2llc1wiKSlcbiAgY29uc3QgdGVjaEljb25zID0gYXdhaXQgZ2V0VGVjaG5vbG9naWVzKClcblxuICBsZXQgbmV3SWNvblVybCA9ICcnXG4gIGxldCBuYW1lID0gJydcbiAgY29uc3QgaGFuZGxlQ2hhbmdlID0gKGUpID0+IHtcbiAgICBjb25zb2xlLmxvZyhlLnRhcmdldC5uYW1lLCBlLnRhcmdldC52YWx1ZSlcbiAgICBuZXdJY29uVXJsID0gZS50YXJnZXQudmFsdWVcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZU5hbWVDaGFuZ2UgPSAoZSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKGUudGFyZ2V0Lm5hbWUsIGUudGFyZ2V0LnZhbHVlKVxuICAgIG5hbWUgPSBlLnRhcmdldC52YWx1ZVxuICB9XG4gIGNvbnN0IGNyZWF0ZSA9IChlLCBib2R5KSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICBjcmVhdGVUZWNobm9sb2d5KGJvZHkpXG5cbiAgfVxuICBjb25zdCB1cGRhdGUgPSAoZSwgYm9keSwgaWQpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICB1cGRhdGVUZWNobm9sb2d5KGJvZHksIGlkKVxuICB9XG5cbiAgdGVjaEljb25zLmZvckVhY2goKHRlY2gsIGluZGV4KSA9PiB7XG4gICAgbGV0IGljb24gPSBjZWNsKCdpbWcnLCAndGVjaC1pY29uJylcbiAgICBpY29uLnNyYyA9IGBzcmMvaW1nLyR7dGVjaC5pY29uX3VybH1gXG4gICAgdGVjaG5vbG9naWVzLmFwcGVuZENoaWxkKGljb24pXG5cbiAgICBpZiAodXNlciAmJiB1c2VyLmlzQWRtaW4pIHtcblxuICAgICAgbGV0IG5hbWUgPSBjZWNsKCdkaXYnLCAnbmFtZScpXG4gICAgICBuYW1lLmlubmVyVGV4dCA9IHRlY2gubmFtZVxuICAgICAgY29uc3QgZm9ybSA9IEZvcm0oJ3RlY2gtaWNvbi1mb3JtJylcbiAgICAgIGNvbnN0IGlucHV0ID0gSW5wdXQoeyBjbGFzc05hbWU6ICd0ZWNoSWNvbklucHV0JywgbmFtZTogdGVjaC5uYW1lLCB0eXBlOiAndGV4dCcsIHZhbHVlOiB0ZWNoLmljb25fdXJsLCBwbGFjZWhvbGRlcjogJ3RlY2gtaWNvbi11cmwnLCBoYW5kbGVDaGFuZ2UgfSlcbiAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoaW5wdXQpXG4gICAgICBmb3JtLmFwcGVuZENoaWxkKG5hbWUpXG4gICAgICB0ZWNobm9sb2dpZXMuYXBwZW5kQ2hpbGQoZm9ybSlcblxuICAgICAgY29uc3QgYnV0dG9uID0gQnV0dG9uKCd1cGRhdGUtdGVjaC1pY29uLWJ0bicsICdzdWJtaXQnLCAndXBkYXRlIGljb24gdXJsJylcbiAgICAgIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGUpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2codGVjaC5pZClcbiAgICAgICAgdXBkYXRlKGUsIHsgLi4udGVjaCwgaWNvbl91cmw6IG5ld0ljb25VcmwgfSwgdGVjaC5pZClcbiAgICAgIH0pXG4gICAgICBmb3JtLmFwcGVuZENoaWxkKGJ1dHRvbilcblxuICAgICAgY29uc3QgZGVsZXRlQnRuID0gQnV0dG9uKCdkZWxldGUtdGVjaC1idG4nLCAnc3VibWl0JylcbiAgICAgIGRlbGV0ZUJ0bi5pbm5lclRleHQgPSAnZGVsZXRlJ1xuICAgICAgZGVsZXRlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcbiAgICAgICAgY29uc29sZS5sb2coJ3Rlc3QnKVxuICAgICAgICBkZWxldGVUZWNobm9sb2d5KHRlY2guaWQpXG4gICAgICB9KVxuICAgICAgZm9ybS5hcHBlbmRDaGlsZChkZWxldGVCdG4pXG4gICAgfVxuXG5cbiAgfSlcblxuICBjb25zdCBkZWxldGVUZWNoID0gKCkgPT4ge1xuXG4gIH1cblxuXG5cblxuXG5cbiAgY29uc3QgZm9ybSA9IEZvcm0oJ2FkZC10ZWNoLWljb24tZm9ybScpXG4gIGNvbnN0IG5hbWVJbnB1dCA9IElucHV0KHsgY2xhc3NOYW1lOiAnbmFtZScsIG5hbWU6ICduYW1lSW5wdXQnLCB0eXBlOiAndGV4dCcsIHZhbHVlOiAnJywgcGxhY2Vob2xkZXI6ICduZXcgdGVjaG5vbG9neScsIGhhbmRsZUNoYW5nZSB9KVxuICBjb25zdCBpbnB1dCA9IElucHV0KHsgY2xhc3NOYW1lOiAndGVjaEljb25JbnB1dCcsIG5hbWU6ICdpbnB1dCcsIHR5cGU6ICd0ZXh0JywgdmFsdWU6IG5ld0ljb25VcmwsIHBsYWNlaG9sZGVyOiAndGVjaC1pY29uLXVybCcsIGhhbmRsZUNoYW5nZTogaGFuZGxlTmFtZUNoYW5nZSB9KVxuXG5cbiAgdGVjaG5vbG9naWVzLmFwcGVuZENoaWxkKGZvcm0pXG4gIGNvbnN0IGJ1dHRvbiA9IEJ1dHRvbignbmV3LXRlY2gtaWNvbi1idG4nLCAnc3VibWl0JywgJ25ldyBpY29uIHVybCcpXG4gIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgYXN5bmMgKGUpID0+IHtcbiAgICBjb25zb2xlLmxvZyhuZXdJY29uVXJsKVxuXG4gICAgY29uc3QgcmVzcCA9IGF3YWl0IGNyZWF0ZShlLCB7IG5hbWU6IG5hbWUsIGljb25fdXJsOiBuZXdJY29uVXJsIH0pXG5cblxuICB9KVxuICBmb3JtLmFwcGVuZENoaWxkKGJ1dHRvbilcbiAgZm9ybS5hcHBlbmRDaGlsZChpbnB1dClcbiAgZm9ybS5hcHBlbmRDaGlsZChuYW1lSW5wdXQpXG4gIHJldHVybiBtYWluQ29udGVudFNjcm9sbGFibGVcbn1cblxuIiwiXG5leHBvcnQgY29uc3QgQmFzZVVybCA9ICgpID0+IHtcblxuICAgIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gJ2h0dHBzOi8vcG9ydGZvbGlvLW1pY2stc2VydmVyLmhlcm9rdWFwcC5jb20nIDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCdcblxufSIsImltcG9ydCB7IEJhc2VVcmwgfSBmcm9tIFwiLi9CYXNlVXJsLmpzXCJcbmNvbnN0IGJhc2VVcmwgPSBCYXNlVXJsKClcblxuZXhwb3J0IGZ1bmN0aW9uIHNldEhlYWRlcnMoaGVhZGVycykge1xuICBpZiAobG9jYWxTdG9yYWdlLmF1dGhUb2tlbikge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5oZWFkZXJzLFxuICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5hdXRoVG9rZW59YCxcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGhlYWRlcnNcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgY2xlYXJIZWFkZXJzID0gKGhlYWRlcnMpID0+IHtcbiAgcmV0dXJuIHtcbiAgICAuLi5oZWFkZXJzLFxuICAgIEF1dGhvcml6YXRpb246IG51bGwsXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHNpZ25VcCA9IGFzeW5jIChib2R5KSA9PiB7XG4gIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGJvZHkpKVxuXG4gIGxldCByZXMgPSBhd2FpdCBmZXRjaChiYXNlVXJsICsgXCIvdXNlcnNcIiwge1xuICAgIG1ldGhvZDogXCJwb3N0XCIsXG4gICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxuICB9KVxuICAgIC50aGVuKChqc29uKSA9PiB7XG4gICAgICByZXR1cm4ganNvbi5qc29uKClcbiAgICB9KVxuICAgIC50aGVuKChkYXRhKSA9PiB7XG5cbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiYXV0aFRva2VuXCIsIGRhdGEudG9rZW4pXG5cbiAgICAgIHJldHVybiBkYXRhXG4gICAgfSlcbiAgcmV0dXJuIHJlc1xufVxuXG5leHBvcnQgY29uc3QgbG9naW4gPSBhc3luYyAoYm9keSkgPT4ge1xuICBjb25zb2xlLmxvZyhib2R5KVxuICBsZXQgcmVzID0gYXdhaXQgZmV0Y2goYmFzZVVybCArIFwiL2F1dGgvbG9naW5cIiwge1xuICAgIG1ldGhvZDogXCJwb3N0XCIsXG4gICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxuICB9KVxuICAgIC50aGVuKChqc29uKSA9PiB7XG4gICAgICByZXR1cm4ganNvbi5qc29uKClcblxuICAgIH0pXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKGRhdGEpXG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImF1dGhUb2tlblwiLCBkYXRhLnRva2VuKVxuXG5cbiAgICAgIHJldHVybiBkYXRhXG4gICAgfSlcbiAgY29uc29sZS5sb2cocmVzKVxuICByZXR1cm4gcmVzXG59XG5cbmV4cG9ydCBjb25zdCB2ZXJpZnkgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJhdXRoVG9rZW5cIilcbiAgLy8gY29uc29sZS5sb2codG9rZW4pXG4gIGlmICh0b2tlbikge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGJhc2VVcmwgKyBcIi9hdXRoL3ZlcmlmeVwiLCB7XG4gICAgICBtZXRob2Q6IFwiZ2V0XCIsXG4gICAgICBoZWFkZXJzOiBzZXRIZWFkZXJzKHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICB9KSxcbiAgICB9KVxuICAgICAgLnRoZW4oKGpzb24pID0+IHtcbiAgICAgICAgcmV0dXJuIGpzb24uanNvbigpXG4gICAgICB9KVxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgcmV0dXJuIGRhdGFcbiAgICAgIH0pXG5cbiAgICByZXR1cm4gcmVzXG4gIH1cblxuICByZXR1cm4gZmFsc2Vcbn1cblxuZXhwb3J0IGNvbnN0IGdldEN1cnJlbnRVc2VyID0gYXN5bmMgKCkgPT4ge1xuICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJhdXRoVG9rZW5cIikpIHtcbiAgICAvLyBjb25zb2xlLmxvZyhcImhlcmVcIiwgbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJhdXRoVG9rZW5cIikpXG4gICAgbGV0IHVzZXIgPSBhd2FpdCB2ZXJpZnkoKVxuICAgIGNvbnNvbGUubG9nKHVzZXIpXG4gICAgaWYgKCF1c2VyLmVycm9ycykge1xuICAgICAgLy8gbG9naW5CdXR0b24uaW5uZXJUZXh0ID0gXCJsb2dvdXRcIlxuICAgICAgLy8gbG9nZ2VkSW4gPSB0cnVlXG4gICAgICByZXR1cm4gdXNlclxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBsb2dpbkJ1dHRvbi5pbm5lclRleHQgPSBcImxvZ2luXCJcblxuICAgIC8vIGxvZ2dlZEluID0gZmFsc2VcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuICBjb25zb2xlLmxvZyhsb2dnZWRJbilcbn1cblxuZXhwb3J0IGNvbnN0IGxvZ291dCA9IGFzeW5jICgpID0+IHtcbiAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oXCJhdXRoVG9rZW5cIilcbiAgY2xlYXJIZWFkZXJzKHtcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgfSlcbiAgcmV0dXJuIFwibG9nZ2VkIG91dFwiXG59XG4iXSwic291cmNlUm9vdCI6IiJ9