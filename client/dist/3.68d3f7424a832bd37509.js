(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{114:function(t,e,n){var o=n(1),a=n(115);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[t.i,a,""]]);var i={insert:"head",singleton:!1},l=(o(a,i),a.locals?a.locals:{});t.exports=l},115:function(t,e,n){},122:function(t,e,n){"use strict";n.r(e),n.d(e,"Signup",(function(){return i}));var o=n(93),a=n(0);n(114);const i=async()=>{let t=Object(a.e)(".main-content-scrollable");for(;t.childNodes.length>1;)t.removeChild(t.lastChild);let e={},n=Object(a.c)("div","sign-up"),i=Object(a.c)("form","login-form");["username","email","password"].map(t=>{let n=i.appendChild(Object(a.c)("label","login-label"));n.setAttribute("for",t),n.innerText=t;let o=i.appendChild(Object(a.c)("input",`login-${t}`));o.setAttribute("id",t),o.setAttribute("name",t),o.addEventListener("keyup",t=>{e[t.target.name]=t.target.value,console.log(t.target.value,e)})});const l=Object(a.c)("button","submit-login");l.innerText="signUp",i.appendChild(l),i.addEventListener("submit",async t=>{t.preventDefault(),console.log("body",e);let n=await Object(o.c)(e);console.log(n)});let c=Object(a.c)("button","login");c.classList.add("login-btn");let r=await Object(o.d)();if(r.errors){console.log("logout due to error"),Object(o.b)();Object(a.c)("button","login")}c.innerText=r?"logout":"login",c.addEventListener("click",async()=>{if(console.log(r),r||0===Object.keys(e).length){await Object(o.b)()&&(c.innerText="login")}else{e={auth:{...e}},console.log(e);await Object(o.a)(e);let t=await Object(o.d)();console.log(t),c.innerText=t&&"logout"}}),n.appendChild(i),n.appendChild(c),t.appendChild(n)}},91:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));const o=()=>"https://portfolio-mick-server.herokuapp.com"},93:function(t,e,n){"use strict";n.d(e,"c",(function(){return i})),n.d(e,"a",(function(){return l})),n.d(e,"d",(function(){return c})),n.d(e,"b",(function(){return r}));var o=n(91);const a=Object(o.a)();const i=async t=>(console.log(JSON.stringify(t)),await fetch(a+"/users",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then(t=>t.json()).then(t=>(localStorage.setItem("authToken",t.token),t))),l=async t=>await fetch(a+"/auth/login",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then(t=>t.json()).then(t=>(localStorage.setItem("authToken",t.token),t)),c=async()=>{if(localStorage.getItem("authToken")){return await fetch(a+"/auth/verify",{method:"get",headers:(t={"Content-Type":"application/json"},localStorage.authToken?{...t,Authorization:`Bearer ${localStorage.authToken}`}:t)}).then(t=>t.json()).then(t=>t)}var t;return!1},r=async()=>(localStorage.removeItem("authToken"),{"Content-Type":"application/json"},"logged out")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,