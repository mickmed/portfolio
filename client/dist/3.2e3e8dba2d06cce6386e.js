(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{101:function(e,i,t){"use strict";t.r(i),t.d(i,"Resume",(function(){return s}));t(82);var c=t(0),o=t(3);t(85);async function s(){const e=[{type:"googleDocs",icon:'<i class="fab fa-google-drive"></i>',url:"https://docs.google.com/document/d/1F0CtmV9ViPecK5KDHgKS2BZJiSy8QL6LS51BF2IaroI/edit"},{type:"linkedin",icon:'<i class="fab fa-linkedin"></i>',url:"https://www.linkedin.com/in/mick-roth"},{type:"github",icon:'<i class="fab fa-github"></i>',url:"https://github.com/mickmed"},{type:"ga",icon:'<img src="https://ga-dash.s3.amazonaws.com/production/assets/logo-9f88ae6c9c3871690e33280fcf557f33.png"/>',url:"https://generalassemb.ly/instructors/mick-roth/23105"},{type:"resumePdf",icon:'<i class="far fa-file-pdf"></i>',url:"/resumepdf"}];let i=Object(c.e)(".main-content-scrollable");for(;i.childNodes.length;)i.removeChild(i.lastChild);let t=i.appendChild(Object(c.c)("div","resume")).appendChild(Object(c.c)("div","res-img-wrapper"));e.forEach((e,i)=>{let o=t.appendChild(Object(c.c)("div","option"));o.setAttribute("value",e.type),o.innerHTML=`<a href = ${e.url} target='_blank'>${e.icon}</a>`,o.addEventListener("mouseover",e=>{t.childNodes.forEach(e=>{e.classList.remove("highlight")}),console.log(t.childNodes[i]),o.classList.add("highlight")}),o.classList.remove("highlight")}),i.appendChild(Object(o.a)())}},82:function(e,i,t){"use strict";t.d(i,"a",(function(){return o}));var c=t(0);t(83);const o=(e,i,t,o)=>{let s=Object(c.c)("div","project-img"),n=Object(c.c)("div","img-wrapper");s.appendChild(n);let l=Object(c.c)("div","inner-img-wrap");if(n.appendChild(l),l.appendChild(Object(c.c)("img","img")).src=e,!0===t){let e=l.appendChild(Object(c.c)("div","modal"));e.classList.add("project-modal","modal-slide");e.appendChild(Object(c.c)("span","modal-span")),e.childNodes[0].appendChild(Object(c.c)("h2","project-title"));e.childNodes[0].childNodes[0].innerText=i}return s}},83:function(e,i,t){var c=t(1),o=t(84);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var s={insert:"head",singleton:!1},n=(c(o,s),o.locals?o.locals:{});e.exports=n},84:function(e,i,t){},85:function(e,i,t){var c=t(1),o=t(86);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var s={insert:"head",singleton:!1},n=(c(o,s),o.locals?o.locals:{});e.exports=n},86:function(e,i,t){}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,