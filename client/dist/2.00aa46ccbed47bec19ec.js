(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{100:function(e,i,t){"use strict";t.r(i),t.d(i,"Contact",(function(){return s}));t(82);var c=t(0),o=t(3);t(93);async function s(){const e=[{type:"resumePdf",icon:'<i class="far fa-file-pdf"></i>',url:"/resume"},{type:"googleDocs",icon:'<i class="fab fa-google-drive"></i>',url:"https://docs.google.com/document/d/1F0CtmV9ViPecK5KDHgKS2BZJiSy8QL6LS51BF2IaroI/edit"},{type:"linkedin",icon:'<i class="fab fa-linkedin"></i>',url:"https://www.linkedin.com/in/mick-roth"},{type:"github",icon:'<i class="fab fa-github"></i>',url:"https://github.com/mickmed"},{type:"ga",icon:'<img src="https://ga-dash.s3.amazonaws.com/production/assets/logo-9f88ae6c9c3871690e33280fcf557f33.png"/>',url:"https://generalassemb.ly/instructors/mick-roth/23105"}];let i=Object(c.e)(".main-content-scrollable");for(;i.childNodes.length;)i.removeChild(i.lastChild);let t=i.appendChild(Object(c.c)("div","resume")).appendChild(Object(c.c)("div","res-img-wrapper"));e.forEach((e,i)=>{let o=t.appendChild(Object(c.c)("div","option"));o.setAttribute("value",e.type),o.innerHTML=`<a href = ${e.url} target='_blank'>${e.icon}</a>`,o.addEventListener("mouseover",e=>{t.childNodes.forEach(e=>{e.classList.remove("highlight")}),console.log(t.childNodes[i]),o.classList.add("highlight")}),o.classList.remove("highlight")}),i.appendChild(Object(o.a)())}},82:function(e,i,t){"use strict";t.d(i,"a",(function(){return o}));var c=t(0);t(83);const o=(e,i,t,o)=>{let s=Object(c.c)("div","project-img"),l=Object(c.c)("div","img-wrapper");s.appendChild(l);let n=Object(c.c)("div","inner-img-wrap");if(l.appendChild(n),n.appendChild(Object(c.c)("img","img")).src=e,!0===t){let e=n.appendChild(Object(c.c)("div","modal"));e.classList.add("project-modal","modal-slide");e.appendChild(Object(c.c)("span","modal-span")),e.childNodes[0].appendChild(Object(c.c)("h2","project-title"));e.childNodes[0].childNodes[0].innerText=i,console.log(i),"NYC Trees"===i||"Mick's Math Mental"===i&&(e.childNodes[0].childNodes[0].style.color="rgb(203, 206, 45)")}return s}},83:function(e,i,t){var c=t(1),o=t(84);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var s={insert:"head",singleton:!1},l=(c(o,s),o.locals?o.locals:{});e.exports=l},84:function(e,i,t){},93:function(e,i,t){var c=t(1),o=t(94);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var s={insert:"head",singleton:!1},l=(c(o,s),o.locals?o.locals:{});e.exports=l},94:function(e,i,t){}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,